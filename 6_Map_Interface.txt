Map Interface Important Links
=============================

1.Map Interface details  : https://www.javatpoint.com/java-map
2.HashMap Interface details : https://www.javatpoint.com/java-hashmap
3.Working of HashMap details : https://www.javatpoint.com/working-of-hashmap-in-java
4.LinkedHashMap details : https://www.javatpoint.com/java-linkedhashmap
5.TreeMap details : https://www.javatpoint.com/java-treemap
6.HashTable details : https://www.javatpoint.com/java-hashtable
7.Difference between HashMap and HashTable : https://www.javatpoint.com/difference-between-hashmap-and-hashtable
8.Concurrent HashMap details : https://www.geeksforgeeks.org/concurrenthashmap-in-java/






















Map Interface
=============

The map interface is present in java.util package represents a mapping between a key and a value. 
The Map interface is not a subtype of the Collection interface. Therefore it behaves a bit differently from the rest of the collection types. 
A map contains unique keys.

Geeks, the brainstormer should have been why and when to use Maps?

Maps are perfect to use for key-value association mapping such as dictionaries. The maps are used to perform lookups by 
keys or when someone wants to retrieve and update elements by keys. Some common scenarios are as follows: 

A map of error codes and their descriptions.
A map of zip codes and cities.
A map of managers and employees. Each manager (key) is associated with a list of employees (value) he manages.
A map of classes and students. Each class (key) is associated with a list of students (value).

Characteristics of a Map Interface
===================================

A Map cannot contain duplicate keys and each key can map to at most one value. 
Some implementations allow null key and null values like the HashMap and LinkedHashMap, but some do not like the TreeMap.

The order of a map depends on the specific implementations. 
For example, TreeMap and LinkedHashMap have predictable orders, while HashMap does not.

There are two interfaces for implementing Map in java. They are Map and SortedMap, 
and three classes: HashMap, TreeMap, and LinkedHashMap.

Methods in Map Interface
=========================

clear()                         This method is used to clear and remove all of the elements or mappings from a specified Map collection.

containsKey(Object)          	This method is used to check whether a particular key is being mapped into the Map or not. 
                                It takes the key element as a parameter and returns True if that element is mapped in the map.
								
containsValue(Object)           This method is used to check whether a particular value is being mapped by a single or more than one key in the Map. 
                                It takes the value as a parameter and returns True if that value is mapped by any of the key in the map.	

-------------------------------------------------------------------------------------------------------------------------------------------------------------	

HashMap 
======

HashMap<K, V> is a part of Javaâ€™s collection since Java 1.2. This class is found in java.util package. 
It provides the basic implementation of the Map interface of Java. It stores the data in (Key, Value) pairs, 
and you can access them by an index of another type (e.g. an Integer). One object is used as a key (index) to 
another object (value). If you try to insert the duplicate key, it will replace the element of the corresponding key.

HashMap is similar to HashTable, but it is unsynchronized. It allows to store the null keys as well, but there should be only 
one null key object and there can be any number of null values.  This class makes no guarantees as to the order of the map. 
To use this class and its methods, you need to import java.util.HashMap package or its superclass.

Constructors in HashMap is as follows:
HashMap provides 4 constructors and the access modifier of each is public which are listed as follows:

HashMap()
HashMap(int initialCapacity)
HashMap(int initialCapacity, float loadFactor)
HashMap(Map map)

-------------------------------------------------------------------------------------------------------------------------------------------------------------

LinkedHashMap in Java
=====================

The LinkedHashMap Class is just like HashMap with an additional feature of maintaining an 
order of elements inserted into it. HashMap provided the advantage of quick insertion, search,
and deletion but it never maintained the track and order of insertion which the LinkedHashMap \
provides where the elements can be accessed in their insertion order. 

Important Features of a LinkedHashMap are listed as follows:
===========================================================

A LinkedHashMap contains values based on the key. It implements the Map interface and extends the HashMap class.
It contains only unique elements.
It may have one null key and multiple null values.
It is non-synchronized.
It is the same as HashMap with an additional feature that it maintains insertion order. 
For example, when we run the code with a HashMap, we get a different order of elements.

							